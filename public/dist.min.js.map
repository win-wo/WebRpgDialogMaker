{"version":3,"sources":["app.js","chapters/chapter.js","chapters/chapterPageController.js","data/chapter.js","data/notifications.js","dialogs/dialog.js","dialogs/dialogsListController.js","dialogs/message.js","notifications/notificationsController.js","utils/guid.js","utils/repo.js","utils/slug.js"],"names":["app","angular","module","config","$compileProvider","aHrefSanitizationWhitelist","$routeProvider","when","templateUrl","controller","controllerAs","otherwise","redirectTo","AppController","vm","this","appName","Data","Models","Utils","Chapter","data","DataContructor","Constructor","prototype","id","Guid","newGuid","name","number","language","dialogs","isValid","Error","getFileName","Slug","slugify","ChapterPageController","$location","getFromStorage","JSON","parse","localStorage","chapter","error","saveToStorage","stringify","chapterData","loadDataAsChapter","parsedData","location","reload","Notifications","add","message","file","serializedChapterForExport","serializedChapterForVisualisation","exportedFileName","importChapter","element","files","length","reader","FileReader","onload","e","result","readAsText","exportChapter","encodeURIComponent","resetChapter","updateSerializedChapterForVisualisation","undefined","$inject","type","list","push","Dialog","messages","DialogListController","dialogModal","dialog","newMessage","dialogRepo","Repo","messageRepo","showDialogModal","dialogVm","$","modal","saveDialog","save","duplicateDialog","duplicate","moveUpDialog","moveUp","moveDownDialog","moveDown","removeDialog","remove","demoDialog","saveMessage","Message","selectMessage","messageVm","selectMessageById","get","duplicateMessage","moveUpMessage","moveDownMessage","removeMessage","character","text","choicesText","choices","parseChoices","stringChoices","lines","split","_","forEach","line","splittedLine","NotificationsController","notifications","removeNotification","index","splice","guid","replace","c","r","Math","random","v","toString","items","entity","getIndex","find","findIndex","getAll","messageToMoveUp","messageToMoveDown","toLowerCase"],"mappings":"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","file":"dist.min.js","sourcesContent":["app = angular.module(\"WebRpgDialogMaker\", [\"ngRoute\"]);\r\n\r\napp.config(['$compileProvider', function ($compileProvider) {\r\n    $compileProvider.aHrefSanitizationWhitelist(/^\\s*(https?|ftp|mailto|file|data):/);\r\n}]);\r\n\r\napp.config(['$routeProvider',\r\n    function ($routeProvider) {\r\n        $routeProvider.\r\n            when('/chapter', {\r\n                templateUrl: 'public/modules/chapters/index.html',\r\n                controller: 'ChapterPageController',\r\n                controllerAs: 'ChapterPage'\r\n            }).\r\n            otherwise({\r\n                redirectTo: '/chapter'\r\n            });\r\n    }]);\r\n\r\n(function () {\r\n    app.controller(\"AppController\", AppController);\r\n\r\n    function AppController() {\r\n        var vm = this;\r\n        vm.appName = \"Project Chaptr\";\r\n    }\r\n})();\r\n\r\n//Default namespaces\r\napp.Data = {};\r\napp.Models = {};\r\napp.Utils = {};","app.Models.Chapter = (function () {\r\n    function Chapter(data) {\r\n        if (data) this.DataContructor(data);\r\n        else this.Constructor();\r\n    }\r\n    Chapter.prototype.Constructor = function () {\r\n        this.id = app.Utils.Guid.newGuid();\r\n        this.name = null;\r\n        this.number = null;\r\n        this.language = null;\r\n        this.dialogs = [];\r\n    }\r\n    Chapter.prototype.DataContructor = function (data) {\r\n        this.id = data.id;\r\n        this.name = data.name;\r\n        this.number = data.number;\r\n        this.language = data.language;\r\n        this.dialogs = data.dialogs;\r\n    }\r\n    Chapter.prototype.isValid = function () {\r\n        if (!this.id) throw new Error(\"Missing id\");\r\n        if (!this.name) throw new Error(\"Missing name\");\r\n        if (!this.number) throw new Error(\"Missing number\");\r\n        if (!this.language) throw new Error(\"Missing language\");\r\n        if (!this.dialogs) throw new Error(\"Missing dialogs\");\r\n    }\r\n\r\n    Chapter.prototype.getFileName = function () {\r\n        return this.number + \".\" + this.language + \".\" + app.Utils.Slug.slugify(this.name) + \".json\";\r\n    }\r\n    return Chapter;\r\n})();","(function () {\r\n    app.controller(\"ChapterPageController\", ChapterPageController);\r\n    ChapterPageController.$inject = [\"$location\"];\r\n\r\n    function ChapterPageController($location) {\r\n        var vm = this;\r\n        //dialogs\r\n        vm.chapterData = app.Data.Chapter;\r\n        vm.chapterData.chapter = new app.Models.Chapter(getFromStorage());\r\n                \r\n        //export/import\r\n        vm.file = null;\r\n        vm.serializedChapterForExport = null;        \r\n        vm.serializedChapterForVisualisation = null;\r\n        vm.exportedFileName = null;\r\n        \r\n        //Import Export\r\n        vm.saveToStorage = function () {\r\n            saveToStorage();\r\n        }\r\n        vm.importChapter = function () {\r\n            try {\r\n                var element = angular.element(\"#toolbar-file-import\")[0];\r\n                if (element.files.length == 0) throw new Error(\"No file selected\");\r\n                var file = element.files[0];\r\n                var reader = new FileReader();\r\n\r\n                reader.onload = function (e) {\r\n                    loadDataAsChapter(reader.result);\r\n                };\r\n\r\n                reader.readAsText(file);\r\n            } catch (error) {\r\n                app.Data.Notifications.add(\"danger\", \"Impossible to import : \" + error.message);\r\n            }\r\n        }\r\n        vm.exportChapter = function () {\r\n            try {\r\n                vm.serializedChapterForExport = encodeURIComponent(JSON.stringify(vm.chapterData.chapter));\r\n                vm.exportedFileName = vm.chapterData.chapter.getFileName();\r\n            } catch (error) {\r\n                app.Data.Notifications.add(\"danger\", \"Error while exporting : \" + error.message);\r\n            }\r\n        }\r\n        vm.resetChapter = function(){\r\n            vm.chapterData.chapter = new app.Models.Chapter();\r\n        }\r\n        vm.updateSerializedChapterForVisualisation = function () {\r\n            vm.serializedChapterForVisualisation = JSON.stringify(vm.chapterData.chapter, undefined, 2);\r\n        }\r\n\r\n        function getFromStorage() {\r\n            try {\r\n                return JSON.parse(localStorage.chapter);\r\n            } catch (error) {\r\n                return null;\r\n            }\r\n        }\r\n        function saveToStorage() {\r\n            localStorage.chapter = JSON.stringify(vm.chapterData.chapter);\r\n        }\r\n        function loadDataAsChapter(data) {\r\n            try {\r\n                var parsedData = JSON.parse(data);\r\n                var chapter = new app.Models.Chapter(parsedData);\r\n\r\n                chapter.isValid();\r\n                vm.chapterData.chapter = chapter;\r\n                saveToStorage();\r\n                location.reload();\r\n            } catch (error) {\r\n                app.Data.Notifications.add(\"danger\", \"File is not valid : \" + error.message);\r\n            }\r\n        }\r\n    }\r\n})();","app.Data.Chapter = {\r\n    \r\n}","app.Data.Notifications = {\r\n    data: [],\r\n    add: function (type, message) {\r\n        this.list.push({\r\n            type: type,\r\n            message: message\r\n        });\r\n    }\r\n};","app.Models.Dialog = (function () {\r\n    function Dialog(vm) {\r\n        if (vm) {\r\n            this.id = vm.id || app.Utils.Guid.newGuid();\r\n            this.name = vm.name;\r\n            this.number = vm.number;\r\n            this.messages = vm.messages;\r\n        }\r\n        else {\r\n            this.id = app.Utils.Guid.newGuid();\r\n            this.name = null;\r\n            this.number = null;\r\n            this.messages = [];\r\n        }\r\n    }\r\n    return Dialog;\r\n})();","(function () {\r\n    app.controller(\"DialogListController\", DialogListController);\r\n\r\n    function DialogListController() {\r\n        var vm = this;\r\n        vm.chapterData = app.Data.Chapter;\r\n        vm.dialogModal = {\r\n            id: \"#dialogModal\",\r\n            dialog: {},\r\n            newMessage: {}\r\n        };\r\n\r\n        var dialogRepo = new app.Utils.Repo(vm.chapterData.chapter.dialogs);\r\n        var messageRepo = null;\r\n        \r\n        //dialog\r\n        vm.showDialogModal = function (dialogVm) {\r\n            vm.dialogModal.dialog = new app.Models.Dialog(dialogVm);\r\n            messageRepo = new app.Utils.Repo(vm.dialogModal.dialog.messages);\r\n            $(vm.dialogModal.id).modal();\r\n        }\r\n        vm.saveDialog = function (dialogVm) {\r\n            var dialog = new app.Models.Dialog(dialogVm);\r\n            dialogRepo.save(dialog);\r\n            vm.dialogModal.dialog = {};\r\n            $(vm.dialogModal.id).modal(\"hide\");\r\n        }\r\n        vm.duplicateDialog = function (dialogVm) {\r\n            var dialog = new app.Models.Dialog(dialogVm);\r\n            dialogRepo.duplicate(dialog)\r\n        }\r\n        vm.moveUpDialog = function (dialogVm) {\r\n            var dialog = new app.Models.Dialog(dialogVm);\r\n            dialogRepo.moveUp(dialog);\r\n        }\r\n        vm.moveDownDialog = function (dialogVm) {\r\n            var dialog = new app.Models.Dialog(dialogVm);\r\n            dialogRepo.moveDown(dialog);\r\n        }\r\n        vm.removeDialog = function (dialogVm) {\r\n            var dialog = new app.Models.Dialog(dialogVm);\r\n            dialogRepo.remove(dialog)\r\n        }\r\n        vm.demoDialog = function (dialog) {\r\n            //todo\r\n        }\r\n        \r\n        //messages\r\n        vm.saveMessage = function () {\r\n            var message = new app.Models.Message(vm.dialogModal.dialog.newMessage);\r\n            messageRepo.save(message);\r\n            vm.dialogModal.dialog.newMessage = {};\r\n        }\r\n        vm.selectMessage = function (messageVm) {\r\n            vm.dialogModal.dialog.newMessage = new app.Models.Message(messageVm);\r\n        }\r\n        vm.selectMessageById = function (id) {\r\n            var message = messageRepo.get(id);\r\n            vm.dialogModal.dialog.newMessage = message;\r\n        }\r\n        vm.duplicateMessage = function (messageVm) {\r\n            var message = new app.Models.Message(messageVm);\r\n            messageRepo.duplicate(message);\r\n        }\r\n        vm.moveUpMessage = function (messageVm) {\r\n            var message = new app.Models.Message(messageVm);\r\n            messageRepo.moveUp(message);\r\n        }\r\n        vm.moveDownMessage = function (messageVm) {\r\n            var message = new app.Models.Message(messageVm);\r\n            messageRepo.moveDown(message);\r\n        }\r\n        vm.removeMessage = function (messageVm) {\r\n            var message = new app.Models.Message(messageVm);\r\n            messageRepo.remove(message);\r\n        }\r\n    }\r\n})();","app.Models.Message = (function () {\r\n    function Message(vm) {\r\n        if (vm) {\r\n            this.id = vm.id || app.Utils.Guid.newGuid();\r\n            this.character = vm.character;\r\n            this.text = vm.text;\r\n            this.choicesText = vm.choicesText;\r\n            this.choices = this.parseChoices(this.choicesText);\r\n        }\r\n        else {\r\n            this.id = app.Utils.Guid.newGuid();\r\n            this.character = null;\r\n            this.text = null;\r\n            this.choicesText = null;\r\n            this.choices = null;\r\n        }\r\n    }\r\n\r\n    Message.prototype.parseChoices = function (stringChoices) {\r\n        var choices = [];\r\n        try {\r\n            var lines = stringChoices.split(\"\\n\");\r\n\r\n            _.forEach(lines, function (line) {\r\n                var splittedLine = line.split(\"|\");\r\n                if (splittedLine[0] && splittedLine[1]) {\r\n                    choices.push({\r\n                        text: splittedLine[0],\r\n                        id: splittedLine[1]\r\n                    })\r\n                }\r\n            });\r\n        } catch (error) {\r\n            //ignore\r\n        }\r\n        return choices;\r\n    }\r\n    return Message;\r\n})();","(function () {\r\n    app.controller(\"NotificationsController\", NotificationsController);\r\n    \r\n    function NotificationsController() {\r\n        var vm = this;\r\n\r\n        vm.notifications = app.Data.Notifications.data;\r\n        \r\n        vm.removeNotification = function (index) {\r\n            vm.notifications.splice(index, 1);\r\n        }\r\n    }\r\n})();\r\n\r\n","app.Utils.Guid = (function () {\r\n    function Guid() { }\r\n    \r\n    Guid.newGuid = function () {\r\n        var guid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n        return guid;\r\n    }\r\n    return Guid;\r\n})();","app.Utils.Repo = (function () {\r\n    function Repo(items) {\r\n        this.items = items;\r\n    }\r\n\r\n    Repo.prototype.save = function (entity) {\r\n        var index = this.getIndex(entity.id);\r\n\r\n        if (index != -1) {\r\n            this.items[index] = entity;\r\n        }\r\n        else {\r\n            this.items.push(entity);\r\n        }\r\n    }\r\n    Repo.prototype.duplicate = function (entity) {\r\n        var index = this.getIndex(entity.id);\r\n        entity.id = app.Utils.Guid.newGuid();\r\n        this.items.splice(index, 0, entity);\r\n    }\r\n    Repo.prototype.remove = function (entity) {\r\n        _.remove(this.items, { id: entity.id });\r\n    }\r\n    Repo.prototype.get = function (id) {\r\n        return _.find(this.items, { id: id });\r\n    }\r\n    Repo.prototype.getIndex = function (id) {\r\n        return _.findIndex(this.items, { id: id });\r\n    }\r\n    Repo.prototype.getAll = function () {\r\n        return this.items;\r\n    }\r\n    Repo.prototype.moveUp = function (entity) {\r\n        var index = this.getIndex(entity.id);\r\n        if (index != 0) {\r\n            var messageToMoveUp = this.items[index];\r\n            var messageToMoveDown = this.items[index - 1]\r\n\r\n            this.items[index] = messageToMoveDown;\r\n            this.items[index - 1] = messageToMoveUp;\r\n        }\r\n\r\n    }\r\n    Repo.prototype.moveDown = function (entity) {\r\n        var index = this.getIndex(entity.id);\r\n        if (index != this.items.length - 1) {\r\n            var messageToMoveDown = this.items[index]\r\n            var messageToMoveUp = this.items[index + 1];\r\n\r\n            this.items[index] = messageToMoveUp;\r\n            this.items[index + 1] = messageToMoveDown;\r\n        }\r\n    }\r\n    return Repo;\r\n})();","app.Utils.Slug = (function () {\r\n    function Slug() { }\r\n\r\n    Slug.slugify = function (text) {\r\n        return text.toString().toLowerCase()\r\n            .replace(/\\s+/g, '-')           // Replace spaces with -\r\n            .replace(/[^\\w\\-]+/g, '')       // Remove all non-word chars\r\n            .replace(/\\-\\-+/g, '-')         // Replace multiple - with single -\r\n            .replace(/^-+/, '')             // Trim - from start of text\r\n            .replace(/-+$/, '');            // Trim - from end of text\r\n    }\r\n    return Slug;\r\n})();"],"sourceRoot":"/source/"}