{"version":3,"sources":["app.js","chapters/chapter.js","chapters/chapterPageController.js","data/chapter.js","data/notifications.js","dialogs/dialog.js","dialogs/dialogsListController.js","notifications/notificationsController.js","toolbar/toolbarController.js","utils/guid.js","utils/slug.js"],"names":["app","angular","module","config","$compileProvider","aHrefSanitizationWhitelist","$routeProvider","when","templateUrl","controller","controllerAs","otherwise","redirectTo","AppController","vm","this","appName","Data","Models","Utils","Chapter","data","DataContructor","Constructor","prototype","id","Guid","newGuid","name","number","language","dialogs","isValid","Error","getFileName","Slug","slugify","ChapterPageController","$location","getFromStorage","JSON","parse","localStorage","chapter","error","saveToStorage","stringify","chapterData","loadDataAsChapter","parsedData","location","reload","Notifications","add","message","file","serializedChapterForExport","serializedChapterForVisualisation","exportedFileName","importChapter","element","files","length","reader","FileReader","onload","e","result","readAsText","exportChapter","encodeURIComponent","resetChapter","updateSerializedChapterForVisualisation","undefined","$inject","type","list","push","Dialog","messages","DialogListController","dialogModal","dialog","showDialogModal","$","modal","saveDialog","newDialog","index","_","findIndex","duplicateDialog","splice","deleteDialog","remove","demoDialog","NotificationsController","notifications","removeNotification","ToolbarController","guid","replace","c","r","Math","random","v","toString","text","toLowerCase"],"mappings":"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","file":"dist.min.js","sourcesContent":["app = angular.module(\"WebRpgDialogMaker\", [\"ngRoute\"]);\r\n\r\napp.config(['$compileProvider', function ($compileProvider) {\r\n    $compileProvider.aHrefSanitizationWhitelist(/^\\s*(https?|ftp|mailto|file|data):/);\r\n}]);\r\n\r\napp.config(['$routeProvider',\r\n    function ($routeProvider) {\r\n        $routeProvider.\r\n            when('/chapter', {\r\n                templateUrl: 'public/modules/chapters/index.html',\r\n                controller: 'ChapterPageController',\r\n                controllerAs: 'ChapterPage'\r\n            }).\r\n            otherwise({\r\n                redirectTo: '/chapter'\r\n            });\r\n    }]);\r\n\r\n(function () {\r\n    app.controller(\"AppController\", AppController);\r\n\r\n    function AppController() {\r\n        var vm = this;\r\n        vm.appName = \"Project Chaptr\";\r\n    }\r\n})();\r\n\r\n//Default namespaces\r\napp.Data = {};\r\napp.Models = {};\r\napp.Utils = {};","app.Models.Chapter = (function () {\r\n    function Chapter(data) {\r\n        if (data) this.DataContructor(data);\r\n        else this.Constructor();\r\n    }\r\n    Chapter.prototype.Constructor = function () {\r\n        this.id = app.Utils.Guid.newGuid();\r\n        this.name = null;\r\n        this.number = null;\r\n        this.language = null;\r\n        this.dialogs = [];\r\n    }\r\n    Chapter.prototype.DataContructor = function (data) {\r\n        this.id = data.id;\r\n        this.name = data.name;\r\n        this.number = data.number;\r\n        this.language = data.language;\r\n        this.dialogs = data.dialogs;\r\n    }\r\n    Chapter.prototype.isValid = function () {\r\n        if (!this.id) throw new Error(\"Missing id\");\r\n        if (!this.name) throw new Error(\"Missing name\");\r\n        if (!this.number) throw new Error(\"Missing number\");\r\n        if (!this.language) throw new Error(\"Missing language\");\r\n        if (!this.dialogs) throw new Error(\"Missing dialogs\");\r\n    }\r\n\r\n    Chapter.prototype.getFileName = function () {\r\n        return this.number + \".\" + this.language + \".\" + app.Utils.Slug.slugify(this.name) + \".json\";\r\n    }\r\n    return Chapter;\r\n})();","(function () {\r\n    app.controller(\"ChapterPageController\", ChapterPageController);\r\n    ChapterPageController.$inject = [\"$location\"];\r\n\r\n    function ChapterPageController($location) {\r\n        var vm = this;\r\n        //dialogs\r\n        vm.chapterData = app.Data.Chapter;\r\n        vm.chapterData.chapter = new app.Models.Chapter(getFromStorage());\r\n                \r\n        //export/import\r\n        vm.file = null;\r\n        vm.serializedChapterForExport = null;        \r\n        vm.serializedChapterForVisualisation = null;\r\n        vm.exportedFileName = null;\r\n        \r\n        //Import Export\r\n        vm.saveToStorage = function () {\r\n            saveToStorage();\r\n        }\r\n        vm.importChapter = function () {\r\n            try {\r\n                var element = angular.element(\"#toolbar-file-import\")[0];\r\n                if (element.files.length == 0) throw new Error(\"No file selected\");\r\n                var file = element.files[0];\r\n                var reader = new FileReader();\r\n\r\n                reader.onload = function (e) {\r\n                    loadDataAsChapter(reader.result);\r\n                };\r\n\r\n                reader.readAsText(file);\r\n            } catch (error) {\r\n                app.Data.Notifications.add(\"danger\", \"Impossible to import : \" + error.message);\r\n            }\r\n        }\r\n        vm.exportChapter = function () {\r\n            try {\r\n                vm.serializedChapterForExport = encodeURIComponent(JSON.stringify(vm.chapterData.chapter));\r\n                vm.exportedFileName = vm.chapterData.chapter.getFileName();\r\n            } catch (error) {\r\n                app.Data.Notifications.add(\"danger\", \"Error while exporting : \" + error.message);\r\n            }\r\n        }\r\n        vm.resetChapter = function(){\r\n            vm.chapterData.chapter = new app.Models.Chapter();\r\n        }\r\n        vm.updateSerializedChapterForVisualisation = function () {\r\n            vm.serializedChapterForVisualisation = JSON.stringify(vm.chapterData.chapter, undefined, 2);\r\n        }\r\n\r\n        function getFromStorage() {\r\n            try {\r\n                return JSON.parse(localStorage.chapter);\r\n            } catch (error) {\r\n                return null;\r\n            }\r\n        }\r\n        function saveToStorage() {\r\n            localStorage.chapter = JSON.stringify(vm.chapterData.chapter);\r\n        }\r\n        function loadDataAsChapter(data) {\r\n            try {\r\n                var parsedData = JSON.parse(data);\r\n                var chapter = new app.Models.Chapter(parsedData);\r\n\r\n                chapter.isValid();\r\n                vm.chapterData.chapter = chapter;\r\n                saveToStorage();\r\n                location.reload();\r\n            } catch (error) {\r\n                app.Data.Notifications.add(\"danger\", \"File is not valid : \" + error.message);\r\n            }\r\n        }\r\n    }\r\n})();","app.Data.Chapter = {\r\n    \r\n}","app.Data.Notifications = {\r\n    data: [],\r\n    add: function (type, message) {\r\n        this.list.push({\r\n            type: type,\r\n            message: message\r\n        });\r\n    }\r\n};","app.Models.Dialog = (function(){\r\n    function Dialog(data){\r\n        if (data) this.DataContructor(data);\r\n        else this.Constructor();\r\n    }\r\n    Dialog.prototype.Constructor = function () {\r\n        this.id = app.Utils.Guid.newGuid();\r\n        this.name = null;\r\n        this.number = null;\r\n        this.messages = [];\r\n    }\r\n    Dialog.prototype.DataContructor = function (data) {\r\n        this.id = data.id;\r\n        this.name = data.name;\r\n        this.number = data.number;\r\n        this.messages = data.messages;\r\n    }\r\n    \r\n    return Dialog;\r\n})();","(function(){\r\n    app.controller(\"DialogListController\", DialogListController);\r\n    \r\n    function DialogListController(){\r\n        var vm = this;\r\n        vm.chapterData = app.Data.Chapter;\r\n            \r\n        vm.dialogModal = {\r\n            id: \"#dialogModal\",\r\n            dialog: {},\r\n        };\r\n        \r\n        vm.showDialogModal = function (dialog) {\r\n            vm.dialogModal.dialog = new app.Models.Dialog(dialog);\r\n            $(vm.dialogModal.id).modal();\r\n        }\r\n\r\n        vm.saveDialog = function (dialog) {\r\n            var newDialog = new app.Models.Dialog(dialog);\r\n\r\n            var index = _.findIndex(vm.chapterData.chapter.dialogs, { id: newDialog.id });\r\n\r\n            if (index != -1) {\r\n                vm.chapterData.chapter.dialogs[index] = newDialog;\r\n            }\r\n            else {\r\n                vm.chapterData.chapter.dialogs.push(newDialog);\r\n            }\r\n\r\n            $(vm.dialogModal.id).modal(\"hide\");\r\n        }\r\n        vm.duplicateDialog = function(dialog){\r\n            debugger;\r\n            dialog.id = app.Utils.Guid.newGuid();\r\n            var newDialog = new app.Models.Dialog(dialog);  \r\n            \r\n            var index = _.findIndex(vm.chapterData.chapter.dialogs, { id: newDialog.id }); \r\n            \r\n            vm.chapterData.chapter.dialogs.splice(index, 0, newDialog);         \r\n        }\r\n        vm.deleteDialog = function (dialog) {\r\n            _.remove(vm.chapterData.chapter.dialogs, { id: dialog.id });\r\n        }\r\n        vm.demoDialog = function (dialog) {\r\n\r\n        }\r\n    }\r\n})();","(function () {\r\n    app.controller(\"NotificationsController\", NotificationsController);\r\n    \r\n    function NotificationsController() {\r\n        var vm = this;\r\n\r\n        vm.notifications = app.Data.Notifications.data;\r\n        \r\n        vm.removeNotification = function (index) {\r\n            vm.notifications.splice(index, 1);\r\n        }\r\n    }\r\n})();\r\n\r\n","(function () {\r\n    app.controller(\"ToolbarController\", ToolbarController);\r\n    \r\n    function ToolbarController() {\r\n        var vm = this;\r\n       \r\n    }\r\n})();","app.Utils.Guid = (function () {\r\n    function Guid() { }\r\n    \r\n    Guid.newGuid = function () {\r\n        var guid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n        return guid;\r\n    }\r\n    return Guid;\r\n})();","app.Utils.Slug = (function () {\r\n    function Slug() { }\r\n\r\n    Slug.slugify = function (text) {\r\n        return text.toString().toLowerCase()\r\n            .replace(/\\s+/g, '-')           // Replace spaces with -\r\n            .replace(/[^\\w\\-]+/g, '')       // Remove all non-word chars\r\n            .replace(/\\-\\-+/g, '-')         // Replace multiple - with single -\r\n            .replace(/^-+/, '')             // Trim - from start of text\r\n            .replace(/-+$/, '');            // Trim - from end of text\r\n    }\r\n    return Slug;\r\n})();"],"sourceRoot":"/source/"}