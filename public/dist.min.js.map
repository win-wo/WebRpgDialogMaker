{"version":3,"sources":["app.js","chapters/chapter.js","chapters/manageChapterController.js","data/notificationsRepository.js","notifications/notificationsController.js","toolbar/toolbarController.js","utils/guid.js","utils/slug.js"],"names":["app","angular","module","config","$compileProvider","aHrefSanitizationWhitelist","$routeProvider","when","templateUrl","controller","controllerAs","otherwise","redirectTo","AppController","vm","this","appName","factory","Guid","Slug","Chapter","data","DataContructor","Constructor","prototype","id","newGuid","name","number","language","dialogs","isValid","Error","getFileName","slugify","$inject","ManageChapterController","$location","NotificationsRepository","getFromStorage","JSON","parse","localStorage","chapter","error","saveToStorage","stringify","loadDataAsChapter","parsedData","add","message","dialogModal","dialog","file","serializedChapterForExport","serializedChapterForVisualisation","exportedFileName","showDialogModal","copy","$","modal","saveDialog","newDialog","index","_","findIndex","push","selectDialog","updateDialogWindowVisible","deleteDialog","remove","demoDialog","importChapter","element","files","length","reader","FileReader","onload","e","result","readAsText","exportChapter","encodeURIComponent","resetChapter","updateSerializedChapterForVisualisation","undefined","list","type","NotificationsController","notifications","removeNotification","splice","ToolbarController","guid","replace","c","r","Math","random","v","toString","text","toLowerCase"],"mappings":"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","file":"dist.min.js","sourcesContent":["app = angular.module(\"WebRpgDialogMaker\", [\"ngRoute\"]);\r\n\r\napp.config(['$compileProvider', function ($compileProvider) {\r\n    $compileProvider.aHrefSanitizationWhitelist(/^\\s*(https?|ftp|mailto|file|data):/);\r\n}]);\r\n\r\napp.config(['$routeProvider',\r\n    function ($routeProvider) {\r\n        $routeProvider.\r\n            when('/chapters/manage', {\r\n                templateUrl: 'public/modules/chapters/manageChapter.html',\r\n                controller: 'ManageChapterController',\r\n                controllerAs: 'ManageChapter'\r\n            }).\r\n            otherwise({\r\n                redirectTo: '/chapters/manage'\r\n            });\r\n    }]);\r\n\r\n(function () {\r\n    app.controller(\"AppController\", AppController);\r\n\r\n    function AppController() {\r\n        var vm = this;\r\n        vm.appName = \"Project Chaptr\";\r\n    }\r\n})();","(function () {\r\n    app.factory(\"Chapter\", factory)\r\n    factory.$inject = [\"Guid\", \"Slug\"];\r\n\r\n    function factory(Guid, Slug) {\r\n        function Chapter(data) {\r\n            if (data) this.DataContructor(data);\r\n            else this.Constructor();\r\n        }\r\n        Chapter.prototype.Constructor = function () {\r\n            this.id = Guid.newGuid();\r\n            this.name = null;\r\n            this.number = null;\r\n            this.language = null;\r\n            this.dialogs = [];\r\n        }\r\n        Chapter.prototype.DataContructor = function (data) {\r\n            this.id = data.id;\r\n            this.name = data.name;\r\n            this.number = data.number;\r\n            this.language = data.language;\r\n            this.dialogs = data.dialogs;\r\n        }\r\n        Chapter.prototype.isValid = function () {\r\n            if (!this.id) throw new Error(\"Missing id\");\r\n            if (!this.name) throw new Error(\"Missing name\");\r\n            if (!this.number) throw new Error(\"Missing number\");\r\n            if (!this.language) throw new Error(\"Missing language\");\r\n            if (!this.dialogs) throw new Error(\"Missing dialogs\");\r\n        }\r\n\r\n        Chapter.prototype.getFileName = function () {\r\n            return this.number + \".\" + this.language + \".\" + Slug.slugify(this.name) + \".json\";\r\n        }\r\n        return Chapter;\r\n    }\r\n})();","(function () {\r\n    app.controller(\"ManageChapterController\", ManageChapterController);\r\n    ManageChapterController.$inject = [\"$location\", \"Chapter\",\"NotificationsRepository\", \"Guid\"];\r\n\r\n    function ManageChapterController($location, Chapter, NotificationsRepository, Guid) {\r\n        var vm = this;\r\n        //dialogs\r\n        vm.chapter = new Chapter(getFromStorage());\r\n        vm.dialogModal = {\r\n            id: \"#dialogModal\",\r\n            dialog: {},\r\n        };\r\n        //export/import\r\n        vm.file = null;\r\n        vm.serializedChapterForExport = null;        \r\n        vm.serializedChapterForVisualisation = null;\r\n        vm.exportedFileName = null;\r\n        //Dialogs\r\n        vm.showDialogModal = function (dialog) {\r\n            angular.copy(dialog, vm.dialogModal.dialog);\r\n            $(vm.dialogModal.id).modal();\r\n        }\r\n\r\n        vm.saveDialog = function (dialog) {\r\n            var newDialog = {};\r\n            angular.copy(dialog, newDialog);\r\n\r\n            newDialog.id = newDialog.id || Guid.newGuid();\r\n\r\n            var index = _.findIndex(vm.chapter.dialogs, { id: newDialog.id });\r\n\r\n            if (index != -1) {\r\n                vm.chapter.dialogs[index] = newDialog;\r\n            }\r\n            else {\r\n                vm.chapter.dialogs.push(newDialog);\r\n            }\r\n\r\n            $(vm.dialogModal.id).modal(\"hide\");\r\n        }\r\n        vm.selectDialog = function (dialog) {\r\n            vm.updateDialogWindowVisible\r\n            angular.copy(dialog, vm.dialogModal.dialog);\r\n        }\r\n        vm.deleteDialog = function (dialog) {\r\n            _.remove(vm.chapter.dialogs, { id: dialog.id });\r\n        }\r\n        vm.demoDialog = function (dialog) {\r\n\r\n        }\r\n        //Import Export\r\n        vm.saveToStorage = function () {\r\n            saveToStorage();\r\n        }\r\n        vm.importChapter = function () {\r\n            try {\r\n                var element = angular.element(\"#toolbar-file-import\")[0];\r\n                if (element.files.length == 0) throw new Error(\"No file selected\");\r\n                var file = element.files[0];\r\n                var reader = new FileReader();\r\n\r\n                reader.onload = function (e) {\r\n                    loadDataAsChapter(reader.result);\r\n                };\r\n\r\n                reader.readAsText(file);\r\n            } catch (error) {\r\n                NotificationsRepository.add(\"danger\", \"Impossible to import : \" + error.message);\r\n            }\r\n        }\r\n        vm.exportChapter = function () {\r\n            try {\r\n                debugger;\r\n                vm.serializedChapterForExport = encodeURIComponent(JSON.stringify(vm.chapter));\r\n                vm.exportedFileName = vm.chapter.getFileName();\r\n            } catch (error) {\r\n                NotificationsRepository.add(\"danger\", \"Error while exporting : \" + error.message);\r\n            }\r\n        }\r\n        vm.resetChapter = function(){\r\n            vm.chapter = new Chapter();\r\n        }\r\n        vm.updateSerializedChapterForVisualisation = function () {\r\n            vm.serializedChapterForVisualisation = JSON.stringify(vm.chapter, undefined, 2);\r\n        }\r\n\r\n        function getFromStorage() {\r\n            try {\r\n                return JSON.parse(localStorage.chapter);\r\n            } catch (error) {\r\n                return null;\r\n            }\r\n        }\r\n        function saveToStorage() {\r\n            localStorage.chapter = JSON.stringify(vm.chapter);\r\n        }\r\n        function loadDataAsChapter(data) {\r\n            try {\r\n                var parsedData = JSON.parse(data);\r\n                var chapter = new Chapter(parsedData);\r\n\r\n                chapter.isValid();\r\n                vm.chapter = chapter;\r\n                saveToStorage();\r\n            } catch (error) {\r\n                NotificationsRepository.add(\"danger\", \"File is not valid : \" + error.message);\r\n            }\r\n        }\r\n    }\r\n})();","app.factory('NotificationsRepository', function(){\r\n  var NotificationsRepository = {};\r\n\r\n  NotificationsRepository.list = [];\r\n\r\n  NotificationsRepository.add = function(type, message){\r\n    NotificationsRepository.list.push({\r\n        type : type,\r\n        message : message\r\n    });\r\n  };\r\n\r\n  return NotificationsRepository;\r\n});","(function () {\r\n    app.controller(\"NotificationsController\", NotificationsController);\r\n    NotificationsController.$inject = [\"NotificationsRepository\"]\r\n    function NotificationsController(NotificationsRepository) {\r\n        var vm = this;\r\n\r\n        vm.notifications = NotificationsRepository.list;\r\n        \r\n        vm.removeNotification = function (index) {\r\n            vm.notifications.splice(index, 1);\r\n        }\r\n    }\r\n})();\r\n\r\n","(function () {\r\n    app.controller(\"ToolbarController\", ToolbarController);\r\n    \r\n    function ToolbarController() {\r\n        var vm = this;\r\n       \r\n    }\r\n})();","(function () {\r\n    app.factory(\"Guid\", function () {\r\n        return {\r\n            newGuid: function () {\r\n                var guid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n                    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n                    return v.toString(16);\r\n                });\r\n                return guid;\r\n            }\r\n        };\r\n    })\r\n})();","(function () {\r\n    app.factory(\"Slug\", function () {\r\n        return {\r\n            slugify: function (text) {\r\n                return text.toString().toLowerCase()\r\n                    .replace(/\\s+/g, '-')           // Replace spaces with -\r\n                    .replace(/[^\\w\\-]+/g, '')       // Remove all non-word chars\r\n                    .replace(/\\-\\-+/g, '-')         // Replace multiple - with single -\r\n                    .replace(/^-+/, '')             // Trim - from start of text\r\n                    .replace(/-+$/, '');            // Trim - from end of text\r\n            }\r\n        };\r\n    })\r\n})();"],"sourceRoot":"/source/"}