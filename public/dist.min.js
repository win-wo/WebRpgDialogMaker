app=angular.module("WebRpgDialogMaker",["ngRoute"]),app.config(["$compileProvider",function(a){a.aHrefSanitizationWhitelist(/^\s*(https?|ftp|mailto|file|data):/)}]),app.config(["$routeProvider",function(a){a.when("/chapters/manage",{templateUrl:"public/modules/chapters/manageChapter.html",controller:"ManageChapterController",controllerAs:"ManageChapter"}).otherwise({redirectTo:"/chapters/manage"})}]),function(){function a(){var a=this;a.appName="Project Chaptr"}app.controller("AppController",a)}(),app.Data={},app.Models={},app.Utils={},app.Models.Chapter=function(){function a(a){a?this.DataContructor(a):this.Constructor()}return a.prototype.Constructor=function(){this.id=app.Utils.Guid.newGuid(),this.name=null,this.number=null,this.language=null,this.dialogs=[]},a.prototype.DataContructor=function(a){this.id=a.id,this.name=a.name,this.number=a.number,this.language=a.language,this.dialogs=a.dialogs},a.prototype.isValid=function(){if(!this.id)throw new Error("Missing id");if(!this.name)throw new Error("Missing name");if(!this.number)throw new Error("Missing number");if(!this.language)throw new Error("Missing language");if(!this.dialogs)throw new Error("Missing dialogs")},a.prototype.getFileName=function(){return this.number+"."+this.language+"."+app.Utils.Slug.slugify(this.name)+".json"},a}(),function(){function a(a){function t(){try{return JSON.parse(localStorage.chapter)}catch(a){return null}}function e(){localStorage.chapter=JSON.stringify(o.chapterData.chapter)}function i(a){try{var t=JSON.parse(a),i=new app.Models.Chapter(t);i.isValid(),o.chapterData.chapter=i,e()}catch(r){app.Data.Notifications.add("danger","File is not valid : "+r.message)}}var o=this;o.chapterData=app.Data.Chapter,o.chapterData.chapter=new app.Models.Chapter(t()),o.dialogModal={id:"#dialogModal",dialog:{}},o.file=null,o.serializedChapterForExport=null,o.serializedChapterForVisualisation=null,o.exportedFileName=null,o.showDialogModal=function(a){angular.copy(a,o.dialogModal.dialog),$(o.dialogModal.id).modal()},o.saveDialog=function(a){var t={};angular.copy(a,t),t.id=t.id||app.Utils.Guid.newGuid();var e=_.findIndex(o.chapterData.chapter.dialogs,{id:t.id});-1!=e?o.chapterData.chapter.dialogs[e]=t:o.chapterData.chapter.dialogs.push(t),$(o.dialogModal.id).modal("hide")},o.selectDialog=function(a){o.updateDialogWindowVisible,angular.copy(a,o.dialogModal.dialog)},o.deleteDialog=function(a){_.remove(o.chapterData.chapter.dialogs,{id:a.id})},o.demoDialog=function(a){},o.saveToStorage=function(){e()},o.importChapter=function(){try{var a=angular.element("#toolbar-file-import")[0];if(0==a.files.length)throw new Error("No file selected");var t=a.files[0],e=new FileReader;e.onload=function(a){i(e.result)},e.readAsText(t)}catch(o){app.Data.Notifications.add("danger","Impossible to import : "+o.message)}},o.exportChapter=function(){try{o.serializedChapterForExport=encodeURIComponent(JSON.stringify(o.chapterData.chapter)),o.exportedFileName=o.chapterData.chapter.getFileName()}catch(a){app.Data.Notifications.add("danger","Error while exporting : "+a.message)}},o.resetChapter=function(){o.chapterData.chapter=new app.Models.Chapter},o.updateSerializedChapterForVisualisation=function(){o.serializedChapterForVisualisation=JSON.stringify(o.chapterData.chapter,void 0,2)}}app.controller("ManageChapterController",a),a.$inject=["$location"]}(),app.Data.Chapter={},app.Data.Notifications={data:[],add:function(a,t){this.list.push({type:a,message:t})}},function(){function a(){var a=this;a.notifications=app.Data.Notifications.data,a.removeNotification=function(t){a.notifications.splice(t,1)}}app.controller("NotificationsController",a)}(),app.Utils.Guid=function(){function a(){}return a.newGuid=function(){var a="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(a){var t=16*Math.random()|0,e="x"==a?t:3&t|8;return e.toString(16)});return a},a}(),app.Utils.Slug=function(){function a(){}return a.slugify=function(a){return a.toString().toLowerCase().replace(/\s+/g,"-").replace(/[^\w\-]+/g,"").replace(/\-\-+/g,"-").replace(/^-+/,"").replace(/-+$/,"")},a}(),function(){function a(){}app.controller("ToolbarController",a)}();
//# sourceMappingURL=dist.min.js.map
